@page "/ApplianceOverview"
@using IoTControllerContracts
@using Serilog
@using SmartPowerHub.Data
@inject DeviceService<IAppliance> ApplianceService
@inject ILogger Logger
@inject ISnackbar Snackbar
@inject IDialogService DialogService

<PageTitle>Appliance Overview</PageTitle>

@if (_displayableAppliances == null)
{
    <MudContainer Style="display: flex; justify-content: center; align-items: center; height: 90vh;">
        <div>
            <MudProgressCircular Color="Color.Primary" Style="height:70px;width:70px;" Indeterminate="true"/>
        </div>
    </MudContainer>
}
else
{
    <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h2" Class="m-4">Appliance Overview</MudText>
    <MudGrid Class="p-4">
        <MudItem xs="12">
            <MudGrid Justify="Justify.FlexStart">
                @foreach (var displayableAppliance in _displayableAppliances)
                {
                    <MudItem xs="6" sm="4" md="3" lg="2">
                        <MudPaper Elevation="4" Class="square-paper hover-paper d-flex flex-column align-center justify-center mud-width-full rounded-lg" @onclick="displayableAppliance.ToggleSelected">
                            @if (!displayableAppliance.IsSelected)
                            {
                                <MudIcon Icon="@Icons.Material.Filled.DevicesOther" Color="Color.Primary" Style="font-size: 5rem;"/>
                                <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" Class="m-4">@displayableAppliance.Appliance.Name</MudText>
                                @if (displayableAppliance.IsOnline)
                                {
                                    <MudText Align="Align.Center" Color="Color.Success" Typo="Typo.body1" Class="m-4">Online</MudText>
                                }
                                else
                                {
                                    <MudText Align="Align.Center" Color="Color.Error" Typo="Typo.body1" Class="m-4">Offline</MudText>
                                }
                            }
                            @if (displayableAppliance.IsSelected)
                            {
                                <MudGrid Justify="Justify.Center">
                                    <MudItem xs="12" Class="d-flex align-center justify-center mud-width-full">
                                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" OnClick="ToggleApplianceConfiguration"/>
                                    </MudItem>
                                    <MudItem xs="12" Class="d-flex align-center justify-center mud-width-full">
                                        <MudIconButton Icon="@Icons.Material.Filled.Terminal" Variant="Variant.Filled" Color="Color.Default" Size="Size.Large" OnClick="displayableAppliance.ShowConsole" />
                                    </MudItem>
                                    <MudItem xs="12" Class="d-flex align-center justify-center mud-width-full">
                                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" Size="Size.Large" OnClick="ToggleDeleteDialog"/>
                                    </MudItem>
                                </MudGrid>
                            }
                        </MudPaper>
                    </MudItem>
                }
                <MudItem xs="6" sm="4" md="3" lg="2">
                    <MudPaper Elevation="0" Class="square-paper d-flex flex-column align-center justify-center mud-width-full">
                        <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" Style="font-size: 10rem;" OnClick="ToggleControllerPicker"/>
                        <MudText Align="Align.Center" Color="Color.Primary" Typo="Typo.h6" Class="m-4">Add New Appliance</MudText>
                    </MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
}

<MudDialog @bind-IsVisible="IsChooseControllerVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Choose Controller
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudSelect @bind-Value="SelectedController" T="string" Label="Controller" AnchorOrigin="Origin.BottomCenter">
            @foreach (var controller in _availableControllers)
            {
                <MudSelectItem Value="@controller">@controller</MudSelectItem>
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="ToggleControllerPicker">Cancel</MudButton>
        <MudButton Color="Color.Success" Variant="Variant.Filled" OnClick="SubmitSelectedController">Confirm</MudButton>
    </DialogActions>
</MudDialog>

<MudDialog @bind-IsVisible="IsLoadingVisible" OnBackdropClick="() => { }">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Loading...
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true"/>
    </DialogContent>
</MudDialog>

<MudDialog @bind-IsVisible="IsConfigDialogVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Settings" Class="mr-3 mb-n1"/>
            Appliance Editing
        </MudText>
    </TitleContent>
    <DialogContent>
        <EditForm Model="@_selectedAppliance.Validator" OnValidSubmit="_selectedAppliance.OnValidEditSubmit">
            <DataAnnotationsValidator/>
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Name" HelperText="Max. 30 characters" AutoGrow
                                  @bind-Value="_selectedAppliance.Validator.Name" For="@(() => _selectedAppliance.Validator.Name)"/>
                    <MudTextField Label="Description" Class="mt-3" HelperText="Max. 200 characters" AutoGrow
                                  @bind-Value="_selectedAppliance.Validator.Description" For="@(() => _selectedAppliance.Validator.Description)"/>
                </MudCardContent>
                <MudCardActions>
                    <MudButton OnClick="ToggleApplianceConfiguration">Cancel</MudButton>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Confirm</MudButton>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </DialogContent>
</MudDialog>

<MudDialog @bind-IsVisible="IsDeleteDialogVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Delete Appliance
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Typo="Typo.body1">
            Are you sure you want to delete this appliance?
        </MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="() => IsDeleteDialogVisible = false">Cancel</MudButton>
        <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="_selectedAppliance.DeleteAppliance">Delete</MudButton>
    </DialogActions>
</MudDialog>